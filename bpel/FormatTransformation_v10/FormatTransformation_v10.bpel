<!-- FormatTransformation_v10 BPEL Process [Generated by the Oracle BPEL Designer] -->
<process name="FormatTransformation_v10" targetNamespace="http://emayor.org/FormatTransformation_v10" suppressJoinFailure="yes" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:tns="http://emayor.org/FormatTransformation_v10" xmlns:ns4="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:nsxml1="http://www.emayor.org/FormatTransformationSchema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns2="http://schemas.oracle.com/xpath/extension/ldap" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:nsxml0="http://interfaces.FormatTransformation.eMayor.org"><!-- ================================================================= --><!-- PARTNERLINKS                                                      --><!-- List of services participating in this BPEL process               --><!-- ================================================================= -->
 <partnerLinks><!-- The 'client' role represents the requester of this service. -->
  <partnerLink name="client" partnerLinkType="tns:FormatTransformation_v10" myRole="FormatTransformation_v10Provider"/>
  <partnerLink name="formatTransformationServicePL" partnerLinkType="nsxml0:FormatTransformationService" partnerRole="FormatTransformationServiceProvider"/>
 </partnerLinks><!-- ================================================================= --><!-- VARIABLES                                                         --><!-- List of messages and XML documents used within this BPEL process  --><!-- ================================================================= -->
 <variables><!-- Reference to the message passed as input during initiation -->
  <variable name="input" messageType="tns:FormatTransformation_v10RequestMessage"/><!-- 
          Reference to the message that will be returned to the requester
          -->
  <variable name="output" messageType="tns:FormatTransformation_v10ResponseMessage"/>
  <variable name="useEJBBinding" type="xsd:string"/>
 </variables><!-- ================================================================= --><!-- ORCHESTRATION LOGIC                                               --><!-- Set of activities coordinating the flow of messages across the    --><!-- services integrated within this business process                  --><!-- ================================================================= -->
 <sequence name="main"><!-- Receive input from requester. 
             Note: This maps to operation defined in FormatTransformation_v10.wsdl 
             -->
  <receive name="receiveInput" partnerLink="client" portType="tns:FormatTransformation_v10" operation="process" variable="input" createInstance="yes"/><!-- Generate reply to synchronous request -->
  <assign name="prepareEnvironment">
   <copy>
    <from expression="'NO'"/>
    <to variable="useEJBBinding"/>
   </copy>
  </assign>
  <switch name="Switch_1">
   <case condition="bpws:getVariableData('useEJBBinding') = 'YES'">
    <bpelx:annotation>
     <bpelx:pattern>use binding or java exec
     </bpelx:pattern>
    </bpelx:annotation>
    <scope name="DoTransformation">
     <variables>
      <variable name="transformIn" messageType="nsxml0:transformRequest"/>
      <variable name="transformOut" messageType="nsxml0:transformResponse"/>
     </variables>
     <sequence>
      <assign name="prepareInput">
       <copy>
        <from variable="input" part="payload" query="/tns:FormatTransformation_v10Request/nsxml1:typeOfTransformation"/>
        <to variable="transformIn" part="typeOfTransformation"/>
       </copy>
       <copy>
        <from variable="input" part="payload" query="/tns:FormatTransformation_v10Request/nsxml1:typeOfDocument"/>
        <to variable="transformIn" part="typeOfDocument"/>
       </copy>
       <copy>
        <from expression="ora:getNodeValue(ns4:getVariableData('input','payload','/tns:FormatTransformation_v10Request/nsxml1:documentToTransform'))"/>
        <to variable="transformIn" part="documentToTransform"/>
       </copy>
      </assign>
      <invoke name="invoke-1" partnerLink="formatTransformationServicePL" portType="nsxml0:Transformer" operation="transform" inputVariable="transformIn" outputVariable="transformOut"/>
      <assign name="processOutput">
       <copy>
        <from variable="transformOut" part="transformReturn"/>
        <to variable="output" part="payload" query="/tns:FormatTransformation_v10Response/nsxml1:transformedDocument"/>
       </copy>
      </assign>
     </sequence>
    </scope>
   </case>
   <otherwise>
    <sequence name="Sequence_1">
     <scope name="DoTransformation">
      <bpelx:exec import="java.util.Properties"/>
      <bpelx:exec import="javax.naming.InitialContext"/>
      <bpelx:exec import="javax.naming.Context"/>
      <bpelx:exec import="org.w3c.dom.Element"/>
      <bpelx:exec import="org.w3c.dom.NodeList"/>
      <bpelx:exec import="org.eMayor.FormatTransformation.interfaces.Transformer"/>
      <bpelx:exec import="org.eMayor.FormatTransformation.interfaces.TransformerHome"/>
      <bpelx:exec import="javax.rmi.PortableRemoteObject"/>
      <bpelx:exec name="getTranslation" language="Java" version="1.4"><![CDATA[//
  Context ctx = null;		
  Object ref = null;
  TransformerHome home = null;
  Transformer trans = null;
  String result = null;
  Element documentAsElement = null;
  String documentAsString = null;
  String typeOfDoc = null;
  String typeOfTrans = null;

try {
  Properties props = new Properties();
  props.setProperty("javax.naming.factory.url.pkgs","org.jboss.naming:org.jnp.interfaces");
  props.setProperty(Context.INITIAL_CONTEXT_FACTORY, "org.jnp.interfaces.NamingContextFactory");
  props.setProperty(Context.PROVIDER_URL, "localhost:1099");
  
  System.out.println("get document");
  documentAsElement = (Element) getVariableData("input","payload","/tns:FormatTransformation_v10Request/nsxml1:documentToTransform");
  typeOfDoc = ((Element)getVariableData("input","payload","/tns:FormatTransformation_v10Request/nsxml1:typeOfDocument")).getNodeValue();
  typeOfTrans = ((Element)getVariableData("input","payload","/tns:FormatTransformation_v10Request/nsxml1:typeOfTransformation")).getNodeValue();
					
  documentAsString = documentAsElement.getNodeValue();
					
	/*NodeList nodes = documentAsElement.getChildNodes();
	for (int i=0;i<nodes.getLength();i++) {
    if (nodes.item(i).getNodeType() == org.w3c.dom.Node.TEXT_NODE) {
      documentAsString = nodes.item(i).getNodeValue();
			break;
		}
	} 
  */
  
  System.out.println("document    :"+documentAsString);
  System.out.println("doctype     :"+typeOfDoc);
  System.out.println("transtype   :"+typeOfTrans);
  
  System.out.println("get context");
  ctx = new InitialContext(props);
  System.out.println("lookup");
  ref = ctx.lookup("ejb/Transformer");
  System.out.println("get home");
  home = (TransformerHome) PortableRemoteObject.narrow(ref, TransformerHome.class);
  
  System.out.println("get local");
  trans = home.create();
  
  System.out.println("get result");
  result = trans.transform(documentAsString,typeOfTrans,typeOfDoc);
  
} catch (Exception e) {

  e.printStackTrace();
  
  result = "NO";

}

setVariableData("output","payload","/tns:FormatTransformation_v10Response/nsxml1:transformedDocument",result);

]]>
      </bpelx:exec>
     </scope>
    </sequence>
   </otherwise>
  </switch>
  <reply name="replyOutput" partnerLink="client" portType="tns:FormatTransformation_v10" operation="process" variable="output"/>
 </sequence>
</process>
