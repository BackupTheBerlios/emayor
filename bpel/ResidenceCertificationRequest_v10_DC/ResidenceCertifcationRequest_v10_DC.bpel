<!-- ResidenceCertifcationRequest_v10_DC BPEL Process [Generated by the Oracle BPEL Designer]  -->
<process name="ResidenceCertifcationRequest_v10_DC" targetNamespace="http://emayor.org/ResidenceCertifcationRequest_v10/DC" suppressJoinFailure="yes" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:tns="http://emayor.org/ResidenceCertifcationRequest_v10/DC" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns1="http://schemas.oracle.com/xpath/extension/ldap" xmlns:nsxml1="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:nsxml2="http://www.emayor.org/eMayorServiceRequest.xsd" xmlns:nsxml3="http://emayor.org/InputDataCollectionIteration" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:task="http://services.oracle.com/bpel/task" xmlns:DataToBeCollected="http://emayor.org/ResidenceCertifcationRequest_v10/DataToBeCollected.xsd" xmlns:nsxml0="http://emayor.org/ResidenceCertifcationRequest_v10/IDC"><!-- ================================================================= --><!-- PARTNERLINKS                                                      --><!-- List of services participating in this BPEL process               --><!-- ================================================================= -->
 <partnerLinks><!--
        The 'client' role represents the requester of this service. It is 
        used for callback. The location and correlation information associated
        with the client role are automatically set using WS-Addressing.
        -->
  <partnerLink name="client" partnerLinkType="tns:ResidenceCertifcationRequest_v10_DC" myRole="ResidenceCertifcationRequest_v10_DCProvider" partnerRole="ResidenceCertifcationRequest_v10_DCRequester"/>
  <partnerLink name="inputDataCollectorPL" partnerLinkType="nsxml3:InputDataCollectionIteration" partnerRole="InputDataCollectionIterationProvider" myRole="InputDataCollectionIterationRequester"/>
 </partnerLinks><!-- ================================================================= --><!-- VARIABLES                                                         --><!-- List of messages and XML documents used within this BPEL process  --><!-- ================================================================= -->
 <variables><!-- Reference to the message passed as input during initiation -->
  <variable name="input" messageType="tns:ResidenceCertifcationRequest_v10_DCRequestMessage"/><!-- Reference to the message that will be sent back to the 
             requester during callback
             -->
  <variable name="output" messageType="tns:ResidenceCertifcationRequest_v10_DCResponseMessage"/>
  <variable name="inputDataOK" type="xsd:string"/>
  <variable name="requestData" messageType="tns:ResidenceCertifcationRequest_v10_DCRequestMessage"/>
  <variable name="inputDataIn" messageType="nsxml3:InputDataCollectionIterationRequestMessage"/>
  <variable name="inputDataOut" messageType="nsxml3:InputDataCollectionIterationResponseMessage"/>
 </variables><!-- ================================================================= --><!-- ORCHESTRATION LOGIC                                               --><!-- Set of activities coordinating the flow of messages across the    --><!-- services integrated within this business process                  --><!-- ================================================================= -->
 <sequence name="main"><!-- Receive input from requestor. 
             Note: This maps to operation defined in ResidenceCertifcationRequest_v10_DC.wsdl 
             -->
  <receive name="receiveInput" partnerLink="client" portType="tns:ResidenceCertifcationRequest_v10_DC" operation="initiate" variable="input" createInstance="yes"/><!-- Asynchronous callback to the requester.
             Note: the callback location and correlation id is transparently handled 
             using WS-addressing.
             -->
  <assign name="InitAssign">
   <copy>
    <from expression="'NO'"/>
    <to variable="inputDataOK"/>
   </copy>
   <copy>
    <from variable="input" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCRequest"/>
    <to variable="output" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCResponse"/>
   </copy>
   <copy>
    <from variable="input" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCRequest"/>
    <to variable="requestData" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCRequest"/>
   </copy>
  </assign>
  <assign name="configureTask">
   <copy>
    <from variable="requestData" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCRequest/nsxml2:status"/>
    <to variable="inputDataOK"/>
   </copy>
  </assign>
  <scope name="scope-1">
   <sequence>
    <assign name="prepareInput">
     <copy>
      <from variable="requestData" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCRequest"/>
      <to variable="inputDataIn" part="payload" query="/nsxml3:InputDataCollectionIterationRequest"/>
     </copy>
     <copy>
      <from variable="input" part="docType" query="/tns:DocumentType"/>
      <to variable="inputDataIn" part="docType" query="/nsxml3:DocumentType"/>
     </copy>
    </assign>
    <invoke name="initiateService" partnerLink="inputDataCollectorPL" portType="nsxml3:InputDataCollectionIteration" operation="initiate" inputVariable="inputDataIn"/>
    <receive name="receiveResult" partnerLink="inputDataCollectorPL" portType="nsxml3:InputDataCollectionIterationCallback" operation="onResult" variable="inputDataOut" createInstance="no"/>
    <assign name="readOutput">
     <copy>
      <from variable="inputDataOut" part="payload" query="/nsxml3:InputDataCollectionIterationResponse"/>
      <to variable="requestData" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCRequest"/>
     </copy>
    </assign>
   </sequence>
  </scope>
  <assign name="AssignDataToOutput">
   <copy>
    <from variable="requestData" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCRequest"/>
    <to variable="output" part="payload" query="/tns:ResidenceCertifcationRequest_v10_DCResponse"/>
   </copy>
  </assign>
  <invoke name="callbackClient" partnerLink="client" portType="tns:ResidenceCertifcationRequest_v10_DCCallback" operation="onResult" inputVariable="output"/>
 </sequence>
</process>
