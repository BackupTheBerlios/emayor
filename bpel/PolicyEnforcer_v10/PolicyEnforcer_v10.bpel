<!-- PolicyEnforcer_v10 BPEL Process [Generated by the Oracle BPEL Designer] -->
<process name="PolicyEnforcer_v10" targetNamespace="http://emayor.org/ResidenceCertifcationRequest_v10" suppressJoinFailure="yes" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:tns="http://emayor.org/ResidenceCertifcationRequest_v10" xmlns:ns0="http://kernel.servicehandling.emayor.org" xmlns:ns1="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns2="http://schemas.oracle.com/xpath/extension/ldap" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ora="http://schemas.oracle.com/xpath/extension"><!-- ================================================================= --><!-- PARTNERLINKS                                                      --><!-- List of services participating in this BPEL process               --><!-- ================================================================= -->
 <partnerLinks><!-- The 'client' role represents the requester of this service. -->
  <partnerLink name="client" partnerLinkType="tns:PolicyEnforcer_v10" myRole="PolicyEnforcer_v10Provider"/>
  <partnerLink name="policyEnforcer" partnerLinkType="ns0:PEService" partnerRole="PEServiceProvider" myRole="PEServiceRequester"/>
 </partnerLinks><!-- ================================================================= --><!-- VARIABLES                                                         --><!-- List of messages and XML documents used within this BPEL process  --><!-- ================================================================= -->
 <variables><!-- Reference to the message passed as input during initiation --><!-- 
          Reference to the message that will be returned to the requester
          -->
  <variable name="verXMLSigIn" messageType="ns0:F_VerifyXMLSignatureRequest"/>
  <variable name="verXMLSigOut" messageType="ns0:F_VerifyXMLSignatureResponse"/>
  <variable name="signedXMLDocument" messageType="tns:SignedDocumentRequest"/>
  <variable name="decision" messageType="tns:DecisionResponse"/>
  <variable name="xmlDocument" messageType="tns:DocumentRequest"/>
  <variable name="timeStampDocIn" messageType="ns0:F_TimeStampXMLDocumentRequest"/>
  <variable name="timeStampDocOut" messageType="ns0:F_TimeStampXMLDocumentResponse"/>
  <variable name="timeStampedXMLDocument" messageType="tns:TimeStampedDocumentResponse"/>
  <variable name="verTimeStampedXMLDocIn" messageType="ns0:F_VerifyXMLTimeStampedDocumentRequest"/>
  <variable name="verTimeStampedXMLDocOut" messageType="ns0:F_VerifyXMLTimeStampedDocumentResponse"/>
  <variable name="authServiceStepIn" messageType="ns0:F_AuthorizeServiceStepRequest"/>
  <variable name="authServiceStepOut" messageType="ns0:F_AuthorizeServiceStepResponse"/>
  <variable name="authorizeStepInput" messageType="tns:AuthorizeServiceStepRequest"/>
  <variable name="F_NewUserProfile_InputVariable" messageType="ns0:F_NewUserProfileDocumentRequest"/>
  <variable name="F_NewUserProfile_OutputVariable" messageType="ns0:F_NewUserProfileDocumentResponse"/>
  <variable name="FPM_GetSignatureRole_InputVariable" messageType="ns0:FPM_GetSignatureRoleRequest"/>
  <variable name="FPM_GetSignatureRole_OutputVariable" messageType="ns0:FPM_GetSignatureRoleResponse"/>
  <variable name="reply_GetSignatureRole_OutputVariable" messageType="tns:RoleResponse"/>
  <variable name="request_GetSignatureRole_InputVariable" messageType="tns:RoleRequest"/>
  <variable name="reply_NewUserProfile_OutputVariable" messageType="tns:NewUserProfileDocumentResponse"/>
  <variable name="request_NewUserProfile_InputVariable" messageType="tns:NewUserProfileServiceRequest"/>
 </variables><!-- ================================================================= --><!-- ORCHESTRATION LOGIC                                               --><!-- Set of activities coordinating the flow of messages across the    --><!-- services integrated within this business process                  --><!-- ================================================================= -->
 <sequence name="main"><!-- Receive input from requester. 
             Note: This maps to operation defined in PolicyEnforcer_v10.wsdl 
             --><!-- Generate reply to synchronous request -->
  <pick name="undefined" createInstance="yes">
   <onMessage partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="VerifyXMLSignature" variable="signedXMLDocument">
    <sequence name="seq1">
     <bpelx:exec name="marshall" language="Java" version="1.4"><![CDATA[try {
String result = ((Element) getVariableData("signedXMLDocument","signedXmlDocument","/tns:SignedXMLDocument/tns:xmlDocument")).getNodeValue();
//System.out.println("got element");
result = result.replaceAll("<","&lt;");
result = result.replaceAll(">","&gt;");
//System.out.println("replaced chars");
setVariableData("signedXMLDocument","signedXmlDocument","/tns:SignedXMLDocument/tns:xmlDocument",result);
//System.out.println("set element");
} catch (Exception e) {
  e.printStackTrace();
}]]>
     </bpelx:exec>
     <assign name="prepareInput">
      <copy>
       <from variable="signedXMLDocument" part="signedXmlDocument" query="/tns:SignedXMLDocument/tns:xmlDocument"/>
       <to variable="verXMLSigIn" part="in0"/>
      </copy>
      <copy>
       <from variable="signedXMLDocument" part="signedXmlDocument" query="/tns:SignedXMLDocument/tns:userId"/>
       <to variable="verXMLSigIn" part="in1"/>
      </copy>
     </assign>
     <bpelx:exec import="org.w3c.dom.Element"/>
     <invoke name="VerifyXMLSignature" partnerLink="policyEnforcer" portType="ns0:IBPELPolicyEnforcer" operation="F_VerifyXMLSignature" inputVariable="verXMLSigIn" outputVariable="verXMLSigOut"/>
     <assign name="prepareOutput">
      <copy>
       <from variable="verXMLSigOut" part="F_VerifyXMLSignatureReturn"/>
       <to variable="decision" part="decision" query="/tns:Decision"/>
      </copy>
     </assign>
     <reply name="reply" partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="VerifyXMLSignature" variable="decision"/>
    </sequence>
   </onMessage>
   <onMessage partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="TimeStampXMLDocument" variable="xmlDocument">
    <sequence name="seq2">
     <assign name="prepareInput">
      <copy>
       <from variable="xmlDocument" part="xmlDocument" query="/tns:XMLDocument"/>
       <to variable="timeStampDocIn" part="in0"/>
      </copy>
     </assign>
     <invoke name="TimeStampXMLDocument" partnerLink="policyEnforcer" portType="ns0:IBPELPolicyEnforcer" operation="F_TimeStampXMLDocument" inputVariable="timeStampDocIn" outputVariable="timeStampDocOut"/>
     <assign name="prepareOutput">
      <copy>
       <from variable="timeStampDocOut" part="F_TimeStampXMLDocumentReturn"/>
       <to variable="timeStampedXMLDocument" part="xmlDocument" query="/tns:TimeStampedXMLDocument"/>
      </copy>
     </assign>
     <reply name="reply" partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="TimeStampXMLDocument" variable="timeStampedXMLDocument"/>
    </sequence>
   </onMessage>
   <onMessage partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="VerifyXMLTimeStampedDocument" variable="timeStampedXMLDocument">
    <sequence name="seq3">
     <assign name="prepareInput">
      <copy>
       <from variable="timeStampedXMLDocument" part="xmlDocument" query="/tns:TimeStampedXMLDocument"/>
       <to variable="verTimeStampedXMLDocIn" part="in0"/>
      </copy>
     </assign>
     <invoke name="VerifyXMLTimeStampedDocument" partnerLink="policyEnforcer" portType="ns0:IBPELPolicyEnforcer" operation="F_VerifyXMLTimeStampedDocument" inputVariable="verTimeStampedXMLDocIn" outputVariable="verTimeStampedXMLDocOut"/>
     <assign name="prepareOutput">
      <copy>
       <from variable="verTimeStampedXMLDocOut" part="F_VerifyXMLTimeStampedDocumentReturn"/>
       <to variable="decision" part="decision" query="/tns:Decision"/>
      </copy>
     </assign>
     <reply name="reply" partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="VerifyXMLTimeStampedDocument" variable="decision"/>
    </sequence>
   </onMessage>
   <onMessage partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="AuthorizeServiceStep" variable="authorizeStepInput">
    <sequence name="seq4">
     <assign name="prepareInput">
      <copy>
       <from variable="authorizeStepInput" part="xmlDocument" query="/tns:AuthorizeServiceStepStruct/tns:userId"/>
       <to variable="authServiceStepIn" part="in0"/>
      </copy>
      <copy>
       <from variable="authorizeStepInput" part="xmlDocument" query="/tns:AuthorizeServiceStepStruct/tns:ssid"/>
       <to variable="authServiceStepIn" part="in1"/>
      </copy>
      <copy>
       <from variable="authorizeStepInput" part="xmlDocument" query="/tns:AuthorizeServiceStepStruct/tns:step/tns:stepId"/>
       <to variable="authServiceStepIn" part="in2"/>
      </copy>
     </assign>
     <invoke name="AuthorizeServiceStep" partnerLink="policyEnforcer" portType="ns0:IBPELPolicyEnforcer" operation="F_AuthorizeServiceStep" inputVariable="authServiceStepIn" outputVariable="authServiceStepOut"/>
     <assign name="prepareOutput">
      <copy>
       <from variable="authServiceStepOut" part="F_AuthorizeServiceStepReturn"/>
       <to variable="decision" part="decision" query="/tns:Decision"/>
      </copy>
     </assign>
     <reply name="reply" partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="AuthorizeServiceStep" variable="decision"/>
    </sequence>
   </onMessage>
   <onMessage partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="NewUserProfile" variable="request_NewUserProfile_InputVariable">
    <sequence name="seq4">
     <assign name="Assign_1">
      <copy>
       <from variable="request_NewUserProfile_InputVariable" part="userProfile" query="/tns:NewUserProfileInput"/>
       <to variable="F_NewUserProfile_InputVariable" part="in0"/>
      </copy>
     </assign>
     <invoke name="NewUserProfile" partnerLink="policyEnforcer" portType="ns0:IBPELPolicyEnforcer" operation="F_NewUserProfile" inputVariable="F_NewUserProfile_InputVariable" outputVariable="F_NewUserProfile_OutputVariable"/>
     <assign name="prepareOutput">
      <copy>
       <from variable="F_NewUserProfile_OutputVariable" part="newUserProfileResult"/>
       <to variable="reply_NewUserProfile_OutputVariable" part="status" query="/tns:NewUserProfileStatus"/>
      </copy>
     </assign>
     <reply name="reply" partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="NewUserProfile" variable="reply_NewUserProfile_OutputVariable"/>
    </sequence>
   </onMessage>
   <onMessage partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="GetSignatureRole" variable="request_GetSignatureRole_InputVariable">
    <sequence name="seq4">
     <bpelx:exec name="marshall" language="Java" version="1.4"><![CDATA[try {
String result = ((Element) getVariableData("request_GetSignatureRole_InputVariable","xmlDocument","/tns:XMLDocument")).getNodeValue();
//System.out.println("got element");
result = result.replaceAll("<","&lt;");
result = result.replaceAll(">","&gt;");
//System.out.println("replaced chars");
setVariableData("request_GetSignatureRole_InputVariable","xmlDocument","/tns:XMLDocument",result);
//System.out.println("set element");
} catch (Exception e) {
  e.printStackTrace();
}]]>
     </bpelx:exec>
     <assign name="Assign_1">
      <copy>
       <from variable="request_GetSignatureRole_InputVariable" part="xmlDocument" query="/tns:XMLDocument"/>
       <to variable="FPM_GetSignatureRole_InputVariable" part="in0"/>
      </copy>
     </assign>
     <invoke name="GetSignatureRole" partnerLink="policyEnforcer" portType="ns0:IBPELPolicyEnforcer" operation="FPM_GetSignerRole" inputVariable="FPM_GetSignatureRole_InputVariable" outputVariable="FPM_GetSignatureRole_OutputVariable"/>
     <assign name="prepareOutput">
      <copy>
       <from variable="FPM_GetSignatureRole_OutputVariable" part="FPM_GetSignatureRoleReturn"/>
       <to variable="reply_GetSignatureRole_OutputVariable" part="role" query="/tns:XMLDocument"/>
      </copy>
     </assign>
     <reply name="reply" partnerLink="client" portType="tns:PolicyEnforcer_v10" operation="GetSignatureRole" variable="reply_GetSignatureRole_OutputVariable"/>
    </sequence>
   </onMessage>
  </pick>
 </sequence>
</process>
