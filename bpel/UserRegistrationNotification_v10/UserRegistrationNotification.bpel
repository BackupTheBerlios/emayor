<!-- UserRegistrationNotification BPEL Process [Generated by the Oracle BPEL Designer] -->
<process name="UserRegistrationNotification" targetNamespace="http://www.emayor.org" suppressJoinFailure="yes" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:tns="http://www.emayor.org" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns4="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:ns1="http://www.emayor.org/eMayorServiceRequest.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://www.emayor.org/eMayorNotificationBuilderRequest.xsd" xmlns:ns5="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns2="http://xmlns.oracle.com/NotificationBuilderRequest" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ns6="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ora="http://schemas.oracle.com/xpath/extension"><!-- ================================================================= --><!-- PARTNERLINKS                                                      --><!-- List of services participating in this BPEL process               --><!-- ================================================================= -->
    <partnerLinks><!-- The 'client' role represents the requester of this service. -->
        <partnerLink name="client" partnerLinkType="tns:UserRegistrationNotification" myRole="UserRegistrationNotificationProvider"/>
        <partnerLink myRole="NotificationBuilderRequestRequester" name="NotificationBuilder" partnerRole="NotificationBuilderRequestProvider" partnerLinkType="ns2:NotificationBuilderRequest"/>
    </partnerLinks><!-- ================================================================= --><!-- VARIABLES                                                         --><!-- List of messages and XML documents used within this BPEL process  --><!-- ================================================================= -->
    <variables><!-- Reference to the message passed as input during initiation -->
        <variable name="input" messageType="tns:UserRegistrationNotificationRequestMessage"/><!-- 
          Reference to the message that will be returned to the requester
          -->
        <variable name="output" messageType="tns:UserRegistrationNotificationResponseMessage"/>
    </variables><!-- ================================================================= --><!-- ORCHESTRATION LOGIC                                               --><!-- Set of activities coordinating the flow of messages across the    --><!-- services integrated within this business process                  --><!-- ================================================================= -->
    <sequence name="main"><!-- Receive input from requester. 
             Note: This maps to operation defined in UserRegistrationNotification.wsdl 
             -->
        <receive name="receiveInput" partnerLink="client" portType="tns:UserRegistrationNotification" operation="process" variable="input" createInstance="yes"/><!-- Generate reply to synchronous request -->
        <scope name="notify">
            <variables>
                <variable name="sendNotification_initiate_InputVariable" messageType="ns2:NotificationBuilderRequestRequestMessage"/>
            </variables>
            <sequence name="Sequence_1">
                <bpelx:exec import="org.emayor.bpel.tools.MessageUtils"/>
                <bpelx:exec import="org.w3c.dom.Element"/>
                <bpelx:exec name="decomposeInput" language="Java" version="1.4"><![CDATA[
String result = null;

try {
  System.out.println("---1---");
  Element input;
  String lang = null;
  String sex = null;
  
  try {
  System.out.println("---1a---");
  input = (Element) getVariableData("input","payload","/payload/ns1:extraField1");
  lang = input.getNodeValue();
  
  System.out.println("---1b---");
  input = (Element) getVariableData("input","payload","/payload/ns1:extraField2");
  sex = input.getNodeValue();
  } catch (Exception e) {
  }
  
  System.out.println("---1c---");
  input = (Element) getVariableData("input","payload","/payload/ns1:reqestDocument");
  System.out.println("---2---");
  MessageUtils utils = new MessageUtils(input.getNodeValue(),"URRequest",lang,sex);
  System.out.println("---3---");
  setVariableData("sendNotification_initiate_InputVariable","data","/ns2:NotificationBuilderRequestComposeType/ns2:data/ns3:message",utils.getMessageTemplate());
  System.out.println("---4---");
  setVariableData("sendNotification_initiate_InputVariable","data","/ns2:NotificationBuilderRequestComposeType/ns2:data/ns3:mapping",utils.getMessageMapping());
  System.out.println("---5---");
  setVariableData("sendNotification_initiate_InputVariable","data","/ns2:NotificationBuilderRequestComposeType/ns2:data/ns3:profile",input.getNodeValue());
  System.out.println("---6---");
  result = null;
} catch (Exception e) {
  result = e.getMessage();
}

if (result == null) result = "DONE";

]]>
                </bpelx:exec>
                <assign name="createRequest">
                    <copy>
                        <from variable="input" part="payload" query="/payload/ns1:uid"/>
                        <to variable="sendNotification_initiate_InputVariable" part="request" query="/ns2:NotificationBuilderRequestProcessRequest/ns2:request/ns1:uid"/>
                    </copy>
                    <copy>
                        <from variable="input" part="payload" query="/payload/ns1:ssid"/>
                        <to variable="sendNotification_initiate_InputVariable" part="request" query="/ns2:NotificationBuilderRequestProcessRequest/ns2:request/ns1:ssid"/>
                    </copy>
                    <copy>
                        <from variable="input" part="payload" query="/payload/ns1:reqestDocument"/>
                        <to variable="sendNotification_initiate_InputVariable" part="data" query="/ns2:NotificationBuilderRequestComposeType/ns2:data/ns3:profile"/>
                    </copy>
                    <copy>
                        <from expression="&quot;completion&quot;"/>
                        <to variable="sendNotification_initiate_InputVariable" part="data" query="/ns2:NotificationBuilderRequestComposeType/ns2:data/ns3:qualifier"/>
                    </copy>
                    <copy>
                        <from expression="&quot;Registration done!&quot;"/>
                        <to variable="sendNotification_initiate_InputVariable" part="data" query="/ns2:NotificationBuilderRequestComposeType/ns2:data/ns3:subject"/>
                    </copy>
                </assign>
                <invoke name="sendNotification" partnerLink="NotificationBuilder" portType="ns2:NotificationBuilderRequest" operation="initiate" inputVariable="sendNotification_initiate_InputVariable"/>
            </sequence>
        </scope>
        <reply name="replyOutput" partnerLink="client" portType="tns:UserRegistrationNotification" operation="process" variable="output"/>
    </sequence>
</process>

