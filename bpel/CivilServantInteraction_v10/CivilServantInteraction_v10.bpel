<!-- CivilServantInteraction_v10 BPEL Process [Generated by the Oracle BPEL Designer]  -->
<process name="CivilServantInteraction_v10" targetNamespace="http://emayor.org/CivilServantInteraction_v10" suppressJoinFailure="yes" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:tns="http://emayor.org/CivilServantInteraction_v10" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ns4="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:ns1="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:nsxml1="http://www.emayor.org/eMayorServiceRequest.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://schemas.oracle.com/xpath/extension/ldap" xmlns:ns2="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:nsxml0="http://services.oracle.com/bpel/task"><!-- ================================================================= --><!-- PARTNERLINKS                                                      --><!-- List of services participating in this BPEL process               --><!-- ================================================================= -->
 <partnerLinks><!--
        The 'client' role represents the requester of this service. It is 
        used for callback. The location and correlation information associated
        with the client role are automatically set using WS-Addressing.
        -->
  <partnerLink name="client" partnerLinkType="tns:CivilServantInteraction_v10" myRole="CivilServantInteraction_v10Provider" partnerRole="CivilServantInteraction_v10Requester"/>
  <partnerLink name="taskManagerPL" partnerLinkType="nsxml0:TaskManager" partnerRole="TaskManager" myRole="TaskManagerRequester"/>
 </partnerLinks><!-- ================================================================= --><!-- VARIABLES                                                         --><!-- List of messages and XML documents used within this BPEL process  --><!-- ================================================================= -->
 <variables><!-- Reference to the message passed as input during initiation -->
  <variable name="input" messageType="tns:CivilServantInteraction_v10RequestMessage"/><!-- Reference to the message that will be sent back to the 
             requester during callback
             -->
  <variable name="output" messageType="tns:CivilServantInteraction_v10ResponseMessage"/>
 </variables><!-- ================================================================= --><!-- ORCHESTRATION LOGIC                                               --><!-- Set of activities coordinating the flow of messages across the    --><!-- services integrated within this business process                  --><!-- ================================================================= -->
 <sequence name="main"><!-- Receive input from requestor. 
             Note: This maps to operation defined in CivilServantInteraction_v10.wsdl 
             -->
  <receive name="receiveInput" partnerLink="client" portType="tns:CivilServantInteraction_v10" operation="initiate" variable="input" createInstance="yes"/><!-- Asynchronous callback to the requester.
             Note: the callback location and correlation id is transparently handled 
             using WS-addressing.
             -->
  <scope name="interaction">
   <variables>
    <variable name="taskIn" messageType="nsxml0:taskMessage"/>
    <variable name="taskOut" messageType="nsxml0:taskMessage"/>
   </variables>
   <sequence>
    <assign name="prepareInput">
     <copy>
      <from variable="input" part="payload" query="/tns:CivilServantInteraction_v10Request/nsxml1:ssid"/>
      <to variable="taskIn" part="payload" query="/nsxml0:task/nsxml0:title"/>
     </copy>
     <copy>
      <from variable="input" part="docType" query="/tns:DocumentType"/>
      <to variable="taskIn" part="payload" query="/nsxml0:task/nsxml0:priority"/>
     </copy>
     <copy>
      <from expression="'Civil Servant'"/>
      <to variable="taskIn" part="payload" query="/nsxml0:task/nsxml0:assignee"/>
     </copy>
     <copy>
      <from variable="input" part="payload" query="/tns:CivilServantInteraction_v10Request/nsxml1:status"/>
      <to variable="taskIn" part="payload" query="/nsxml0:task/nsxml0:conclusion"/>
     </copy>
     <copy>
      <from variable="input" part="payload" query="/tns:CivilServantInteraction_v10Request/nsxml1:reqestDocument"/>
      <to variable="taskIn" part="payload" query="/nsxml0:task/nsxml0:attachment"/>
     </copy>
     <copy>
      <from variable="input" part="payload" query="/tns:CivilServantInteraction_v10Request/nsxml1:reqDocDigSig"/>
      <to variable="taskIn" part="payload" query="/nsxml0:task/nsxml0:customKey"/>
     </copy>
     <copy>
      <from variable="input" part="payload" query="/tns:CivilServantInteraction_v10Request"/>
      <to variable="output" part="payload" query="/tns:CivilServantInteraction_v10Response"/>
     </copy>
     <copy>
      <from expression="'P14D'"/>
      <to variable="taskIn" part="payload" query="/nsxml0:task/nsxml0:duration"/>
     </copy>
    </assign>
    <bpelx:exec import="org.w3c.dom.Element"/>
    <bpelx:exec name="mergeAttachment" language="Java" version="1.4"><![CDATA[try {

String doc0 = ((Element) getVariableData("input","payload","/tns:CivilServantInteraction_v10Request/nsxml1:reqestDocument")).getNodeValue();

String doc1 = ((Element) getVariableData("input","payload","/tns:CivilServantInteraction_v10Request/nsxml1:extraField1")).getNodeValue();

String doc2 = ((Element) getVariableData("input","payload","/tns:CivilServantInteraction_v10Request/nsxml1:extraField2")).getNodeValue();

String doc3 = ((Element) getVariableData("input","payload","/tns:CivilServantInteraction_v10Request/nsxml1:extraField3")).getNodeValue();

String doc4 = ((Element) getVariableData("input","payload","/tns:CivilServantInteraction_v10Request/nsxml1:extraField4")).getNodeValue();



doc0 = doc0.replaceAll("<","_EMAY_LT_");
doc0 = doc0.replaceAll(">","_EMAY_GT_");
doc1 = doc1.replaceAll("<","_EMAY_LT_");
doc1 = doc1.replaceAll(">","_EMAY_GT_");
doc2 = doc2.replaceAll("<","_EMAY_LT_");
doc2 = doc2.replaceAll(">","_EMAY_GT_");
doc3 = doc3.replaceAll("<","_EMAY_LT_");
doc3 = doc3.replaceAll(">","_EMAY_GT_");
doc4 = doc4.replaceAll("<","_EMAY_LT_");
doc4 = doc4.replaceAll(">","_EMAY_GT_");

String result = "<taskRequest>"
              + "<doc0>" + doc0 +  "</doc0>"
              + "<doc1>" + doc1 +  "</doc1>"
              + "<doc2>" + doc2 +  "</doc2>"
              + "<doc3>" + doc3 +  "</doc3>"
              + "<doc4>" + doc4 +  "</doc4>"
              + "</taskRequest>";
              
//System.out.println("TASK IN: "+result);

setVariableData("taskIn","payload","/nsxml0:task/nsxml0:attachment",result);

} catch (Exception e) {
System.out.println("Got error on TASKIN:");
e.printStackTrace();
}]]>
    </bpelx:exec>
    <invoke name="invoke-1" partnerLink="taskManagerPL" portType="nsxml0:TaskManager" operation="initiateTask" inputVariable="taskIn"/>
    <receive createInstance="no" name="receive-1" partnerLink="taskManagerPL" portType="nsxml0:TaskManagerCallback" operation="onTaskResult" variable="taskOut"/>
    <bpelx:exec import="org.apache.xpath.XPathAPI"/>
    <bpelx:exec import="javax.xml.parsers.DocumentBuilder"/>
    <bpelx:exec import="javax.xml.parsers.DocumentBuilderFactory"/>
    <bpelx:exec import="org.w3c.dom.Document"/>
    <bpelx:exec import="org.xml.sax.InputSource"/>
    <bpelx:exec import="java.io.StringReader"/>
    <bpelx:exec name="splitAttachment" language="Java" version="1.4"><![CDATA[ try {
Element att = (Element) getVariableData("taskOut","payload","/nsxml0:task/nsxml0:attachment");

DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
DocumentBuilder builder = factory.newDocumentBuilder();
Document root = builder.parse(new InputSource(new StringReader(att.getNodeValue())));

String doc0 = null;
String doc1 = null;
String doc2 = null;
String doc3 = null;
String doc4 = null;


try {
  doc0 = XPathAPI.selectSingleNode(root,"/taskRequest/doc0/text()").getNodeValue();
  doc0 = doc0.replaceAll("_EMAY_LT_","<");
  doc0 = doc0.replaceAll("_EMAY_GT_",">");
} catch (Exception e) {
  doc0 = att.getNodeValue();
}

try {
  doc1 = XPathAPI.selectSingleNode(root,"/taskRequest/doc1/text()").getNodeValue();
  doc1 = doc1.replaceAll("_EMAY_LT_","<");
  doc1 = doc1.replaceAll("_EMAY_GT_",">");
} catch (Exception e) {
  doc1 = "<empty/>";
}

try {
  doc2 = XPathAPI.selectSingleNode(root,"/taskRequest/doc2/text()").getNodeValue();
  doc2 = doc2.replaceAll("_EMAY_LT_","<");
  doc2 = doc2.replaceAll("_EMAY_GT_",">");
} catch (Exception e) {
  doc2 = "<empty/>";
}

try {
  doc3 = XPathAPI.selectSingleNode(root,"/taskRequest/doc3/text()").getNodeValue();
  doc3 = doc3.replaceAll("_EMAY_LT_","<");
  doc3 = doc3.replaceAll("_EMAY_GT_",">");
} catch (Exception e) {
  doc3 = "<empty/>";
}

try {
  doc4 = XPathAPI.selectSingleNode(root,"/taskRequest/doc4/text()").getNodeValue();
  doc4 = doc4.replaceAll("_EMAY_LT_","<");
  doc4 = doc4.replaceAll("_EMAY_GT_",">");
} catch (Exception e) {
  doc4 = "<empty/>";
}



  setVariableData("output","payload","/tns:CivilServantInteraction_v10Response/nsxml1:reqestDocument",doc0);
  setVariableData("output","payload","/tns:CivilServantInteraction_v10Response/nsxml1:extraField1",doc1);
  setVariableData("output","payload","/tns:CivilServantInteraction_v10Response/nsxml1:extraField2",doc2);
  setVariableData("output","payload","/tns:CivilServantInteraction_v10Response/nsxml1:extraField1",doc3);
  setVariableData("output","payload","/tns:CivilServantInteraction_v10Response/nsxml1:extraField1",doc4);

} catch (Exception e) {
System.out.println("Got error on TASKOUT:");
e.printStackTrace();
}]]>
    </bpelx:exec>
    <assign name="prepareOutput">
     <copy>
      <from variable="taskOut" part="payload" query="/nsxml0:task/nsxml0:customKey"/>
      <to variable="output" part="payload" query="/tns:CivilServantInteraction_v10Response/nsxml1:reqDocDigSig"/>
     </copy>
     <copy>
      <from variable="taskOut" part="payload" query="/nsxml0:task/nsxml0:conclusion"/>
      <to variable="output" part="payload" query="/tns:CivilServantInteraction_v10Response/nsxml1:status"/>
     </copy>
     <copy>
      <from variable="taskOut" part="payload" query="/nsxml0:task/nsxml0:title"/>
      <to variable="output" part="payload" query="/tns:CivilServantInteraction_v10Response/nsxml1:ssid"/>
     </copy>
     <copy>
      <from variable="taskOut" part="payload" query="/nsxml0:task/nsxml0:modifier"/>
      <to variable="output" part="payload" query="/tns:CivilServantInteraction_v10Response/nsxml1:uid"/>
     </copy>
    </assign>
   </sequence>
  </scope>
  <invoke name="callbackClient" partnerLink="client" portType="tns:CivilServantInteraction_v10Callback" operation="onResult" inputVariable="output"/>
 </sequence>
</process>
