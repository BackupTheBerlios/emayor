<!-- ProcessStepAuthorization_v10 BPEL Process [Generated by the Oracle BPEL Designer] -->
<process name="ProcessStepAuthorization_v10" targetNamespace="http://emayor.org/ProcessStepAuthorization_v10" suppressJoinFailure="yes" xmlns="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:tns="http://emayor.org/ProcessStepAuthorization_v10" xmlns:ns1="http://schemas.oracle.com/xpath/extension/ldap" xmlns:nsxml1="http://www.emayor.org/ProcessStepAuthorization.xsd" xmlns:ns3="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:ns2="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:bpelx="http://schemas.oracle.com/bpel/extension" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:nsxml0="http://emayor.org/ResidenceCertifcationRequest_v10"><!-- ================================================================= --><!-- PARTNERLINKS                                                      --><!-- List of services participating in this BPEL process               --><!-- ================================================================= -->
 <partnerLinks><!-- The 'client' role represents the requester of this service. -->
  <partnerLink name="client" partnerLinkType="tns:ProcessStepAuthorization_v10" myRole="ProcessStepAuthorization_v10Provider"/>
  <partnerLink name="policyEnforcerPL" partnerLinkType="nsxml0:PolicyEnforcer_v10" partnerRole="PolicyEnforcer_v10Provider"/>
 </partnerLinks><!-- ================================================================= --><!-- VARIABLES                                                         --><!-- List of messages and XML documents used within this BPEL process  --><!-- ================================================================= -->
 <variables><!-- Reference to the message passed as input during initiation -->
  <variable name="input" messageType="tns:ProcessStepAuthorization_v10RequestMessage"/><!-- 
          Reference to the message that will be returned to the requester
          -->
  <variable name="output" messageType="tns:ProcessStepAuthorization_v10ResponseMessage"/>
  <variable name="authStepIn" messageType="nsxml0:AuthorizeServiceStepRequest"/>
  <variable name="authStepOut" messageType="nsxml0:DecisionResponse"/>
 </variables><!-- ================================================================= --><!-- ORCHESTRATION LOGIC                                               --><!-- Set of activities coordinating the flow of messages across the    --><!-- services integrated within this business process                  --><!-- ================================================================= -->
 <sequence name="main"><!-- Receive input from requester. 
             Note: This maps to operation defined in ProcessStepAuthorization_v10.wsdl 
             -->
  <receive name="receiveInput" partnerLink="client" portType="tns:ProcessStepAuthorization_v10" operation="process" variable="input" createInstance="yes"/><!-- Generate reply to synchronous request -->
  <assign name="prepareInput">
   <copy>
    <from variable="input" part="payload" query="/tns:ProcessStepAuthorization_v10Request/nsxml1:userId"/>
    <to variable="authStepIn" part="xmlDocument" query="/nsxml0:AuthorizeServiceStepStruct/nsxml0:userId"/>
   </copy>
   <copy>
    <from variable="input" part="payload" query="/tns:ProcessStepAuthorization_v10Request/nsxml1:ssid"/>
    <to variable="authStepIn" part="xmlDocument" query="/nsxml0:AuthorizeServiceStepStruct/nsxml0:ssid"/>
   </copy>
   <copy>
    <from variable="input" part="payload" query="/tns:ProcessStepAuthorization_v10Request/nsxml1:stepId"/>
    <to variable="authStepIn" part="xmlDocument" query="/nsxml0:AuthorizeServiceStepStruct/nsxml0:step/nsxml0:stepId"/>
   </copy>
  </assign>
  <invoke name="invoke-1" partnerLink="policyEnforcerPL" portType="nsxml0:PolicyEnforcer_v10" operation="AuthorizeServiceStep" inputVariable="authStepIn" outputVariable="authStepOut"/>
  <switch name="prepareOutputSwitch">
   <case condition="bpws:getVariableData('authStepOut','decision','
/nsxml0:Decision') = true()">
    <assign name="prepareOutput">
     <copy>
      <from expression="'YES'"/>
      <to variable="output" part="payload" query="/tns:ProcessStepAuthorization_v10Response/nsxml1:decision"/>
     </copy>
    </assign>
   </case>
   <otherwise>
    <assign name="prepareOutput">
     <copy>
      <from expression="'NO'"/>
      <to variable="output" part="payload" query="/tns:ProcessStepAuthorization_v10Response/nsxml1:decision"/>
     </copy>
    </assign>
   </otherwise>
  </switch>
  <reply name="replyOutput" partnerLink="client" portType="tns:ProcessStepAuthorization_v10" operation="process" variable="output"/>
 </sequence>
</process>
